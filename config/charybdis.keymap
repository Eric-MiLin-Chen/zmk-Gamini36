#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>

&lt {
    tapping-term-ms = <240>;
    flavor = "balanced";
    quick-tap-ms = <150>;
};

&mt {
    global-quick-tap;
    flavor = "tap-preferred";
    tapping-term-ms = <200>;
};

&sk {
    release-after-ms = <2000>;
    quick-release;
};

/ {
    combos {
        compatible = "zmk,combos";

        combo_esc {
            timeout-ms = <50>;
            key-positions = <0 1>;
            bindings = <&kp ESC>;
        };

        left_bkt {
            bindings = <&kp LEFT_BRACKET>;
            key-positions = <4 5>;
            timeout-ms = <50>;
        };

        right_bkt {
            bindings = <&kp RIGHT_BRACKET>;
            key-positions = <6 7>;
            timeout-ms = <50>;
        };

        left_par {
            bindings = <&kp LEFT_PARENTHESIS>;
            key-positions = <16 17>;
            timeout-ms = <50>;
        };

        right_par {
            bindings = <&kp RIGHT_PARENTHESIS>;
            key-positions = <18 19>;
            timeout-ms = <50>;
        };

        bac {
            bindings = <&kp BACKSLASH>;
            key-positions = <5 6>;
            timeout-ms = <50>;
        };
    };

    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <180>;
            flavor = "tap-preferred";
        };

        ltq: ltq {
            compatible = "zmk,behavior-hold-tap";
            label = "LTQ";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <180>;
        };

        as: auto_shift {
            compatible = "zmk,behavior-hold-tap";
            label = "AUTO_SHIFT";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <135>;
            quick-tap-ms = <0>;
        };
    };

    macros {
        macro1: new_macro {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp RIGHT &kp ENTER>;
            label = "NEW_MACRO";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        Base {
            label = "Base";
            bindings = <
&kp ESCAPE      &kp Q         &kp W         &kp E         &kp R         &kp T        &kp Y  &kp U  &kp I         &kp O           &kp P          &kp GRAVE
&kp LCTRL       &kp A         &kp S         &kp D         &kp F         &kp G        &kp H  &kp J  &kp K         &kp L           &kp SEMI       &kp SQT
&kp LEFT_SHIFT  &kp Z         &kp X         &kp C         &kp V         &kp B        &kp B  &kp N  &kp M         &kp COMMA       &kp DOT        &kp SLASH
                &kp LEFT_ALT  &kp LEFT_WIN  &ltq 1 SPACE  &ltq 5 ENTER  &lt 1 SPACE                &ltq 1 SPACE  &kp LEFT_SHIFT  &kp BACKSPACE
            >;
        };

        Lower {
            label = "Lower";
            bindings = <
&kp GRAVE  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp N7     &kp N8            &kp N9             &kp NUMBER_0   &trans
&trans     &kp LEFT      &kp DOWN      &kp UP        &kp RIGHT     &trans        &kp MINUS     &kp EQUAL  &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp SEMICOLON  &kp NON_US_BACKSLASH
&trans     &trans        &trans        &trans        &trans        &trans        &trans        &trans     &trans            &trans             &trans         &trans
           &trans        &trans        &trans        &trans        &trans                                 &trans            &trans             &trans
            >;
        };

        Raise {
            label = "Raise";
            bindings = <
&none  &trans      &trans  &trans  &trans  &trans          &trans             &trans    &trans     &trans     &none     &none
&none  &kp N0      &kp N4  &kp N5  &kp N6  &none           &kp COLON          &kp DLLR  &kp PRCNT  &kp CARET  &kp RPAR  &none
&none  &kp KP_DOT  &kp N1  &kp N2  &kp N3  &kp LEFT_SHIFT  &kp DOUBLE_QUOTES  &kp EXCL  &kp AT     &kp HASH   &none     &none
       &trans      &trans  &trans  &trans  &trans                                       &trans     &trans     &trans
            >;
        };

        Shortcut {
            label = "shortcut";
            bindings = <
&none  &none   &none       &kp C_VOL_UP  &none       &none   &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &none
&none  &none   &kp C_PREV  &kp C_PP      &kp C_NEXT  &none   &bt BT_CLR    &none         &none         &none         &none         &none
&none  &none   &none       &kp C_VOL_DN  &trans      &none   &none         &none         &none         &none         &none         &none
       &trans  &trans      &trans        &trans      &trans                              &trans        &trans        &trans
            >;
        };

        Game {
            label = "Game";
            bindings = <
&none   &trans  &trans  &trans  &to 0   &trans  &trans  &trans  &trans  &trans  &none  &none
&trans  &trans  &trans  &trans  &trans  &none   &none   &none   &none   &none   &none  &none
&none   &none   &none   &none   &none   &none   &none   &none   &none   &none   &none  &none
        &none   &none   &none   &none   &none                   &none   &none
            >;
        };

        Mouse {
            bindings = <
&none  &trans  &trans     &trans     &trans     &trans  &trans  &trans     &trans     &trans     &trans  &none
&none  &trans  &mkp RCLK  &mkp MCLK  &mkp LCLK  &none   &trans  &mkp LCLK  &mkp MCLK  &mkp RCLK  &trans  &none
&none  &trans  &trans     &trans     &trans     &trans  &trans  &trans     &trans     &trans     &trans  &none
       &trans  &trans     &trans     &trans     &trans                     &trans     &trans     &to 0
            >;
        };
    };
};
